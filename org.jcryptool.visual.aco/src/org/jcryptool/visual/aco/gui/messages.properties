Func.allSteps=All steps with one click
Func.alpha=Alpha:
Func.analyseCreated=Analyze a created ciphertext
Func.analyseGiven=Analyze a given ciphertext
Func.analysis=Input ciphertext
Func.animation=Animation
Func.antAnalysis=Ant analysis
Func.beta=Beta:
Func.cycle=Cycle
Func.doWithNewAnt=Do with new ant
Func.encryption=Generate ciphertext
Func.error=Error while loading the ACO Plug-in\!
Func.evap=Evap.:
Func.initial_plaintext=This is the correct text
Func.keyLength=Key length:
Func.newAnt=New ant
Func.permutation=Permutation:
Func.plaintext=Plaintext:
Func.ciphertext=Ciphertext:
Func.general=General
Func.keytext=Key:
Func.oneStep=Only one step per click
Func.proceed=Proceed
Func.proceedToAnalysis=Start analysis
Func.reset=Reset
Func.settings=Settings
Func.step=Step
Info.description1=This tutorial illustrates the cryptanalysis of a permutation cipher based on an ant colony optimization algorithm (ACO). In this first part of the tutorial the encryption process is demonstrated.\nThe visualization as graph at the analysis section limits the available key sizes to 3, 4 and 5. Additionally, your text is filled with random characters to match the key size.\nHere the plaintext is written in a matrix. Thereby the key length determines the number of columns of the matrix. Incomplete columns will be filled up with random letters.\nThe cipher text is produced by reading out the columns in the order determined by the permutation. With the aid of the elements on the left side the components of the encryption process can be modified.
Info.description2=Now we move on to the cryptanalysis. Based on the key length first the columns of the encryption matrix are reconstructed. Herefrom a graph is build where every knot corresponds to a column of the matrix.\nThe key length can be investigated by statistical tests. In contrast to that the determination of the right order of the columns is the difficult part of the cryptanalysis. This is where the ACO comes into play. At first an ant is placed randomly on one knot of the graph.
Info.description3=Every trail through the graph including every knot exactly one time corresponds to a possible decryption as one may reconstruct the encryption matrix by concatenating the columns in the order the corresponding knots were passed in the trail and then read out the plaintext line by line.\nThe probability with which an ant chooses a certain not yet passed knot to be the next one in the trail depends on two measures. First the bigrams that occur by concatenating the last column with the possible next columns are examined and compared to ordinary bigrams that occur in texts of natural languages.\nE.g. if an ant is located at a column starting with a Q a column starting with a U gets a higher probability to be the next in the trail than one starting with a X since the combination QU is much more frequent in natural languages than the combination QX.\nIn addition to that certain values are assigned to all edges of the graph. These values are all equal at the beginning and change after an ant has finished its trail through the graph. Based on the analogy to real ants these values are called pheromone values.\nBy using the Sliders Alpha (pheromone) and Beta (bigrams) one can determine the influence the two measures should have on the choice of the ant.
Info.description4=As soon as an ant has finished its trail through the graph the resulting solution will be evaluated. Therefore the derived plaintext is compared to a wordlist containing common words of a natural language (English in this case) with at least three letters. The length of the words found in the possible decryption are squared, summed up and divided by the length of the text.\nThe resulting value is added to the pheromone values that correspond to the edges that build up the trail which led to the decryption. Apart from that a reduction of all pheromone values takes place. This corresponds to a evaporation process in the natural role model. This parameter can also be modified by a slider on the left side of the tutorial.
Info.description5=In order to observe how the pheromone values develop over several iterations of the algorithm one can now send out more ants.
Show.decryptedBestKnown=Best known decryption:
Show.decryptedByAnt1=Ant no
Show.decryptedByAnt2=decrypts text to:
Show.encryptedText=Encrypted text:
Show.encryptionKey=The key found is the decryption key\nThe corresponding encryption key would be:
Show.permutationMatrix=Permutationmatrix
Show.pheromoneMatrix=Pheromone matrix
