VerifiableSecretSharingComposite_tab_title=Verifiable-Secret-Sharing

VerifiableSecretSharingComposite_description=Verifiable-Secret-Sharing ist ein Secret-Sharing-Algorithmus. Das Geheimnis wird so verteilt, dass jede Person seinen eigenen eindeutigen Teil bekommt. Zus\u00E4tzlich hat jede Person die M\u00F6glichkeit zu \u00FCberpr\u00FCfen, \r\nob die Teile der anderen Personen korrekt sind. F\u00FCr die Rekonstruktion wird nur eine zu Beginn festgelegte Anzahl der verschiedenen Teile ben\u00F6tigt. Das Geheimnis wird mit Hilfe der Lagrange-Interpolation berechnet.
VerifiableSecretSharingComposite_restart_button=Neustart
VerifiableSecretSharingComposite_parameters_title=Parameter
VerifiableSecretSharingComposite_coefficients_title=Koeffizienten
VerifiableSecretSharingComposite_commitments_title=Commitments
VerifiableSecretSharingComposite_shares_title=Shares
VerifiableSecretSharingComposite_reconstruction_title=Rekonstruktion
VerifiableSecretSharingComposite_description_title=Erkl\u00E4rungen
VerifiableSecretSharingComposite_description_tooltip=Zus\u00E4tzliche Informationen
VerifiableSecretSharingComposite_description_text_param=Wahl der Parameter:\n\nSpieler n: Hier wird die Anzahl von Spielern festgelegt, die einen Teil des Geheimnisses erhalten soll. Es m\u00FCssen mindestens 2 Spieler sein.\r\nSpieler t f\u00FCr die Rekonstruktion: Hier wird festgelegt, wie viele Spieler f\u00FCr die Rekonstruktion des Geheimnisses ben\u00F6tigt werden. Es m\u00FCssen wieder mindestens 2 sein, allerdings wird dies durch die Anzahl der gesamten Spieler begrenzt.\r\nGeheimnis s: Das Geheimnis s muss eine nat\u00FCrliche ganze Zahl sein.\r\nModul p: Der Modul p muss eine Primzahl sein, die gr\u00F6\u00DFer als das Geheimnis s ist.\r\nPrimitivwurzel g: Als Primitivwurzeln werden in der Zahlentheorie bestimmte Elemente von primen Restklassengruppen bezeichnet. Die definierende Eigenschaft einer Primitivwurzel ist, dass jedes Element der primen Restklassengruppe als Potenz der Primitivwurzel dargestellt werden kann.
VerifiableSecretSharingComposite_description_text_coefficients=Wahl der Koeffizienten:\n\nDie Wahl der Koeffizienten kann automatisch durch einen Klick auf "Generieren" erfolgen.\rn\nAlternativ k\u00F6nnen die Koeffizienten auch selbst gew\u00E4hlt werden, wobei zu beachten ist, dass die Koeffizienten kleiner als der Modul p sind. Bei P(x) wird das Polynom angezeigt.
VerifiableSecretSharingComposite_description_text_comittments=Die Commitments werden mit der Formel g^a_i mod p berechnet.\r\nIn der Folge werden die Commitments zum Pr\u00FCen der Shares verwendet.
VerifiableSecretSharingComposite_description_text_shares=Die Shares sind die Funktionswerte der der ID's der Spieler.\r\nEs werden hier die tats\u00E4chlichen Shares und die Shares mod p angezeigt.\r\nDie Überpr\u00FCfung der Shares erfolgt \u00FCber den jeweiligen "Check"-Button. Nach der Überpr\u00FCfung wird der Share gr\u00FCn(richtig) bzw. rot(falsch) markiert.
VerifiableSecretSharingComposite_description_text_reconstruction=Die Rekonstruktion wird mit Hilfe der Lagrange-Interpolation durchgef\u00FChrt.\r\nNachdem ausreichend Shares ausgew\u00E4hlt wurden (mind. t Shares) kann die Rekonstruktion durchgef\u00FChrt werden.\r\nUm das korrekte Geheimnis wiederherstellen zu k\u00F6nnen, m\u00FCssen alle ausgew\u00E4hlten Shares korrekt sein.


VerifiableSecretSharingComposite_parameters_players=Spieler n
VerifiableSecretSharingComposite_parameters_reconstructors=Spieler zur Rekonstruktion t
VerifiableSecretSharingComposite_parameters_secret=Geheimnis s
VerifiableSecretSharingComposite_parameters_primeMod=Safe Prime p (p>2s)
VerifiableSecretSharingComposite_parameters_primeFactorMod=Primfaktor q (2q=p-1)
VerifiableSecretSharingComposite_parameters_primitiveRoot=Generator g
VerifiableSecretSharingComposite_parameters_determineCoefficients=Koeffizienten bestimmen

VerifiableSecretSharingComposite_nextStep_button=N\u00E4chster Schritt:

VerifiableSecretSharingComposite_coefficients_generate_button=Generieren
VerifiableSecretSharingComposite_coefficients_commit_button=Commit
VerifiableSecretSharingComposite_coefficients_calculateShares_button=Shares berechnen
	
VerifiableSecretSharingComposite_commitments_coefficient_subtitle=Koeffizient
VerifiableSecretSharingComposite_commitments_commitment_subtitle=Commitment Y\u2091
	
VerifiableSecretSharingComposite_shares_shareNModP_subtitle=Share N\u1D62 [mod q]
VerifiableSecretSharingComposite_shares_check_button=Check

VerifiableSecretSharingComposite_playerX=Spieler
	
VerifiableSecretSharingComposite_reconstruction_reconstruct_button=Rekonstruieren

VerifiableSecretSharingComposite_error_start=Die folgenden Bedingungen m\u00FCssen erf\u00FCllt sein:
		
VerifiableSecretSharingComposite_param_player_n_positive=Die Anzahl der Spieler muss eine nat\u00FCrliche Zahl sein!
VerifiableSecretSharingComposite_param_player_n_bigger_2=Die Anzahl der Spieler muss mindestens 2 sein!
VerifiableSecretSharingComposite_param_player_t_smaller_n=Die Anzahl der Spieler die f\u00FCr die Rekonstruktion ben\u00F6tigt werden, darf nicht gr\u00F6\u00DFer als die Anzahl der gesamten Spieler sein!
VerifiableSecretSharingComposite_param_secret_s_positive=Das Geheimnis s muss eine nat\u00FCrliche Zahl sein!
VerifiableSecretSharingComposite_param_module_p_bigger_s=Der Modul p muss gr\u00F6\u00DFer als das Geheimnis sein!
VerifiableSecretSharingComposite_param_module_p_isPrime=Der Modul p muss eine Primzahl sein!
VerifiableSecretSharingComposite_param_primitive_g=g muss eine Primitivwurzel modulo p sein!
VerifiableSecretSharingComposite_param_set_all=Es m\u00FCssen alle Parameter gew\u00E4hlt werden um fortfahren zu k\u00F6nnen!
	
VerifiableSecretSharingComposite_coefficient_positive=Die Koeffizienten m\u00FCssen nat\u00FCrliche Zahlen sein!
VerifiableSecretSharingComposite_coefficient_smaller_p=Die Koeffizienten m\u00FCssen kleiner sein als der Modul p! 
VerifiableSecretSharingComposite_coefficient_set_all=Es m\u00FCssen alle Koeffizienten bestimmt werden!
VerifiableSecretSharingComposite_commitment_not_calculated=Shares k\u00F6nnen nur gecheckt werden, wenn zuvor ein Commitment berechnet wurde.
VerifiableSecretSharingComposite_reconstruct_no_players=Es wurden keine Spieler zur Rekonstruktion ausgew\u00E4hlt.

ChartComposite_tab_title=Rekonstruktionsgraph
ChartComposite_reconstruct_success=Das Polynom konnte erfolgreich rekonstruiert werden.
ChartComposite_reconstruct_failure=Das Polynom konnte nicht rekonstruiert werden. Es sind entweder zu wenig Spieler zur Rekonstruktion ausgewählt oder es wurde ein Share verändert.

VerifiableSecretSharingComposite_description_parameters_left=Bei diesem Schritt werden die Parameter gew\u00E4hlt.\n\r  \u2022 Anzahl der Spieler n [n \u2208 \u2115; n > 1] (Pflichtfeld)\n\r  \u2022 Anzahl der Player zur Rekonstruktion t [t \u2208 \u2115; 1 < t \u2264 n] (Pflichtfeld)\n\r  \u2022 Geheimnis s [s \u2208 \u2115] (Pflichtfeld)\n\r    \u2012 Wird, falls nicht eingegeben, automatisch auf 2 gesetzt.\n\r    \u2012 Ist aufgrund der sp\u00E4teren Berechnungsdauer auf 2000000 beschr\u00E4nkt.\n\r 
VerifiableSecretSharingComposite_description_parameters_right=  \u2022 Safe Prime p [p \u2208 \u2119; p > 2s] (Pflichtfeld)\n\r    \u2012 Wird automatisch generiert.\n\r    \u2012 Eine Save Prime ist eine Primzahl der Form 2q + 1, wobei q ebenfalls eine Primzahl ist. \n\r  \u2022 Generator g [g \u2208 \u2124_p; Ordnung(g) = q] (Pflichtfeld)\n\r    \u2012 Wird automatisch generiert.\n\r  \u2022 q [q \u2208 \u2119] (Pflichtfeld)\n\r    \u2012 Es handelt sich um den größten Primfactor von p-1. Es gilt q = (p-1)/2.

VerifiableSecretSharingComposite_description_coefficients_left=Bei diesem Schritt werden die Koeffizienten a\u1D62 [a\u1D62 \u2208 \u2115; 0 \u2264 a\u1D62 < q]  f\u00FCr das Polynom P(x) ausgew\u00E4hlt. \n\rDiese k\u00F6nnen entweder selbst gew\u00E4hlt, oder zuf\u00E4llig generiert werden. \n\rBei a\u2080 handelt es sich um das Geheimnis s. \n\rDie restlichen Koeffizienten a\u1D62 bis a_(t-1) sind mit 1 als Defaultwert gesetzt. \n\rDas Polynom P(x) wird folgendermaßen aufgebaut: P(x) = a\u2080 + a\u2081x + a\u2082x\u00B2 + ... + a_(t-1)x^(t-1)
VerifiableSecretSharingComposite_description_coefficients_right=Sind alle Koeffizienten gew\u00E4hlt, wird das fertige Polynom angezeigt \n\rund es ist m\u00F6glich die Commitments und die Shares zu berechnen, \n\rwobei die Shares unabh\u00E4ngig von den Commitments berechnet werden k\u00F6nnen. \n\rDie Commitments werden jedoch sp\u00E4ter f\u00FCr den Check der Shares ben\u00F6tigt.\n\r 

VerifiableSecretSharingComposite_description_commitments_left=Bei diesem Schritt werden die Commitments Y\u2091 f\u00FCr jeden Koeffizienten a\u2091  folgendermaßen berchnet: \n\r Y\u2091 = g ^ a\u2091 mod p \n\rDiese werden zum Checken der Shares ben\u00F6tigt.
VerifiableSecretSharingComposite_description_commitments_right

VerifiableSecretSharingComposite_description_shares_left=Bei diesem Schritt werden die Shares N\u1D62 f\u00FCr jeden Spieler i folgendermaßen berechnet: \n\rN\u1D62 = P(i) mod q, \n\rwobei i die ID des Spielers ist und P(i) das Polynom. \n\rAngezeigt werden die Shares modulo q. \n\rDas Zwischenergebnis vor der Reduktion modulo q wird ebenfalls angezeigt, \n\rum die Rekonstruktion graphisch besser veranschaulichen zu k\u00F6nnen.
VerifiableSecretSharingComposite_description_shares_right=Mittels Check wird \u00FCberpr\u00FCft, ob der Share zum commiteten Polynom passt. Dieser kann f\u00FCr jeden Spieler durchgef\u00FChrt werden. \n\rDie Korrektheit wird, nach dem Check, mittels einem gr\u00FCnen(korrekt) bzw. \n\reinem roten(falsch) Hintergrund im Feld angezeigt. \n\rVersuchsweise k\u00F6nnen die Shares modulo q ge\u00E4ndert werden. \n\rDie Berechnung sieht folgendermaßen aus:
	
VerifiableSecretSharingComposite_description_reconstruction_left=Bei diesem Schritt wird die Rekonstruktion des Polynoms vorgenommen. \n\rUm das korrekte Polynom wiederherzustellen muss die Anzahl der gewählten Spieler größer/gleich t sein. \n\rDie Berechnung erfolgt mit Hilfe der Lagrange Interpolation wie folgt:
VerifiableSecretSharingComposite_description_reconstruction_right=  \u2022 Wobei: \n\r    \u2012 u die Anzahl der ausgew\u00E4hlten Spieler und \n\r    \u2012 x_k und x_l die verwendeten IDs der Spieler sind.
VerifiableSecretSharingComposite_description_reconstruction_right_part2=Als Ergebnis wird das Polynom P'(x) geliefert. \n\rDa es sich beim Polynom P'(x) wieder um P(x) hadelt, \n\rwenn gen\u00FCgend Spieler ausgew\u00E4hlt wurden, ist der Koeffizient a\u2080 das Geheimnis s.